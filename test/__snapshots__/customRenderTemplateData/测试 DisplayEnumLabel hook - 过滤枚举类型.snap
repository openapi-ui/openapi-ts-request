/* eslint-disable */
// @ts-ignore
import * as API from './types';

export function displayAddDeviceMachine(field: keyof API.AddDeviceMachine) {
  return {
    lineId: 'lineId',
    lineName: 'lineName',
    machineCode: 'machineCode',
    machineName: 'machineName',
    manageUserId: 'manageUserId',
    manageUserName: 'manageUserName',
    lightSn: 'lightSn',
    signalId: 'signalId',
    serialNo: 'serialNo',
    location: 'location',
    imgList: 'imgList',
    deviceMachineId: '更新才有',
  }[field];
}

export function displayAndonClose(field: keyof API.AndonClose) {
  return {
    andonRecordId: 'andonRecordId',
    disposeDesc: 'disposeDesc',
    disposeImgUrls: 'disposeImgUrls',
  }[field];
}

export function displayAndonRecordNode(field: keyof API.AndonRecordNode) {
  return {
    id: 'id',
    andonRecordId: 'andonRecordId',
    nodeDesc: '节点描述',
    nodeRemark: '节点备注',
    nodeType:
      '1 已上报，2 已接收，3 已处理(关闭)， 4 更换处理人 5 变更内容 6 自定义回复 9 已撤销',
    nodeTypeName: 'nodeTypeName',
    nodeUserId: 'nodeUserId',
    nodeUserName: 'nodeUserName',
    createdUserId: 'createdUserId',
    createdTime: 'createdTime',
    modifyiedUserId: 'modifyiedUserId',
    modifyiedTime: 'modifyiedTime',
  }[field];
}

export function displayAndonRecordQuery(field: keyof API.AndonRecordQuery) {
  return {
    queryDeptId: 'queryDeptId',
    myRelatedFlag: '与我有关, 处理人或者报告人是我或者接收人是我',
    queryDisposeStatus: '处理状态 1 查询未处理的 2 查询已处理的',
    queryTimeType: '1 60天内 2 今天 3 本月 5 日期范围查询 默认1',
    factoryId: 'factoryId',
    startTime: 'startTime',
    endTime: 'endTime',
    size: 'size',
    current: 'current',
  }[field];
}

export function displayAndonRecordVO(field: keyof API.AndonRecordVO) {
  return {
    id: 'ID',
    factoryId: '工厂id',
    factoryName: 'factoryName',
    deptId: 'deptId',
    deptName: 'deptName',
    workshopId: '车间id',
    workshopName: 'workshopName',
    lineId: '产线d',
    lineName: 'lineName',
    machineId: '设备ID',
    signalId: '灯ID',
    calendarDetailId: '日历排班ID',
    calendarId: 'calendarId',
    calendarDate: 'calendarDate',
    shiftDetailName: 'shiftDetailName',
    machineName: 'machineName',
    machineCode: 'machineCode',
    configId: '事件配置ID',
    configName: 'configName',
    eventName: 'eventName',
    reportUserId: '报告人ID',
    reportUserName: 'reportUserName',
    reportTime: '开始时间',
    reportComments: '报告备注',
    reportDate: '报告日期',
    priority: '优先级',
    notifyUseridStrs: '通知人ID列表',
    receiveUserId: '接收人',
    receiveUserName: 'receiveUserName',
    receiveTime: '接收时间',
    receiveDurationTime: '接收用时',
    disposeDurationTime: 'disposeDurationTime',
    disposeUserId: '处理人ID',
    disposeUserName: 'disposeUserName',
    disposeDesc: '处理方式',
    disposeTime: '处理时间',
    totalDurationTime: '持续时间，单位秒',
    sourceType: '来源，1 移动端，2 安灯盒按钮， 3 异常事件',
    state: '状态，1 已上报，2 已接收，3 已处理， 9 已撤销',
    eventAnalysis: '原因分析',
    createdUserId: '创建人',
    createdTime: '创建时间',
    modifyiedUserId: '最后更新人',
    modifyiedTime: '最后更新时间',
    datetimeStamp: '时间戳',
    oeeDetailId: 'oee明细ID',
    workCenterName: 'workCenterName',
    workCenterCode: 'workCenterCode',
    disposeUserNames: 'disposeUserNames',
    disposeUserIds: 'disposeUserIds',
    totalDurationTimeSt: 'totalDurationTimeSt',
    receiveDurationTimeSt: 'receiveDurationTimeSt',
    disposeDurationTimeSt: 'disposeDurationTimeSt',
    statusText:
      '表状态，1 已上报，2 已接收，3 已处理， 9 已撤销转换状态 已申请 已响应 已关闭 已撤销',
    disposeUserList: 'disposeUserList',
    recordNodeList: 'recordNodeList',
    showColor: 'showColor',
    workCenterId: 'workCenterId',
    shiftShowColor: 'shiftShowColor',
    shiftStartTime: 'shiftStartTime',
    shiftEndTime: 'shiftEndTime',
    reportImgList: 'reportImgList',
    disposeImgList: 'disposeImgList',
    reportImgUrls: 'reportImgUrls',
    disposeImgUrls: 'disposeImgUrls',
    shiftName: 'shiftName',
    completedUserId: 'completedUserId',
    completedUserName: 'completedUserName',
  }[field];
}

export function displayAndonReq(field: keyof API.AndonReq) {
  return {
    configId: 'configId',
    configName: 'configName',
    imgList: 'imgList',
    reportComments: 'reportComments',
    selectHandlerUserIds: '处理用户',
    workCenterId: 'workCenterId',
    reqUserId: 'reqUserId',
    sourceType: '来源',
    processDispatchId: '工序派工id',
  }[field];
}

export function displayApiResult(field: keyof API.ApiResult) {
  return {
    code: '状态码',
    message: '提示',
    data: '数据',
    success: '是否成功',
  }[field];
}

export function displayApiResultAndonRecordVO(
  field: keyof API.ApiResultAndonRecordVO
) {
  return {
    code: '状态码',
    message: '提示',
    data: '<p>安灯_记录</p>',
    success: '是否成功',
  }[field];
}

export function displayApiResultMyPageAndonRecordVO(
  field: keyof API.ApiResultMyPageAndonRecordVO
) {
  return {
    code: '状态码',
    message: '提示',
    data: '数据',
    success: '是否成功',
  }[field];
}

export function displayApiResultString(field: keyof API.ApiResultString) {
  return {
    code: '状态码',
    message: '提示',
    data: '数据',
    success: '是否成功',
  }[field];
}

export function displayGetDeviceListUsingPostParams(
  field: keyof API.GetDeviceListUsingPostParams
) {
  return {
    id: 'ID',
    factoryId: '工厂ID',
    deptId: 'deptId',
    workshopId: '车间ID',
    lineId: '产线ID',
    categoryId: '分类ID',
    signalId: '灯ID',
    lightSn: 'lightSn',
    machineCode: '设备编号',
    machineName: '设备名称',
    pinyin: '拼音码',
    wubi: '五笔码',
    imgUrlStrs: '医院图片',
    manageUserId: '管理员ID',
    trademark: '品牌',
    model: '型号',
    serialNo: '序列号',
    supplier: '供应商',
    activationDate: '启用日期',
    checkDate: '验收日期',
    productionDate: '出厂日期',
    pulseInterval: '脉冲间隔',
    standardUseRate: '标准利用率',
    location: '放置地点',
    state: '状态,1启用,2 停用',
    remark: '备注',
    deleteFlag: '删除标记',
    createdUserId: '创建人',
    createdTime: '创建时间',
    modifyiedUserId: '最后更新人',
    modifyiedTime: '最后更新时间',
    datetimeStamp: '时间戳',
    searchKey: 'searchKey',
    oeeState: '0 关机，1 运行，2 等待，3 异常',
    oeeTime: 'oeeTime',
    stateRecordId: 'stateRecordId',
    stateStartTime: 'stateStartTime',
  }[field];
}

export function displayGetUserWorkshopWorkcenterUsingPostParams(
  field: keyof API.GetUserWorkshopWorkcenterUsingPostParams
) {
  return {
    selectDeptId: 'selectDeptId',
  }[field];
}

export function displayJSONObject(field: keyof API.JSONObject) {
  return {
    key: 'key',
  }[field];
}

export function displayMyPageAndonRecordVO(
  field: keyof API.MyPageAndonRecordVO
) {
  return {
    records: 'records',
    total: 'total',
    size: 'size',
    current: 'current',
    orders: 'orders',
    optimizeCountSql: 'optimizeCountSql',
    searchCount: 'searchCount',
    optimizeJoinOfCountSql: 'optimizeJoinOfCountSql',
    maxLimit: 'maxLimit',
    countId: 'countId',
    startTime: 'startTime',
    startTimeStr: 'startTimeStr',
    endTime: 'endTime',
    endTimeStr: 'endTimeStr',
    hasNextPage: 'hasNextPage',
  }[field];
}

export function displayOrderItem(field: keyof API.OrderItem) {
  return {
    column: 'column',
    asc: 'asc',
  }[field];
}

export function displayPlatformUser(field: keyof API.PlatformUser) {
  return {
    id: '用户ID',
    teamId: '团队id',
    factoryId: '工厂id',
    deptId: 'deptId',
    workshopId: '所属车间id',
    lineId: '所属产线d',
    userName: '用户姓名',
    email: '邮箱',
    jobTitle: '职称',
    jobNo: '用户工号',
    accountNo: '用户账号',
    password: '用户密码',
    idNumber: '身份证号',
    dateOfBirth: '出生日期',
    telephone: '联系电话',
    headImageUrl: '头像url',
    userType: '用户类型，1 平台，2 团队，3 工厂',
    adminFlag: '管理员标识，1 管理员，0 非管理员',
    state: '状态（1:在用 2:停用）',
    deleteFlag: '是否删除(0:否 1:是)',
    passwordModifyiedTime: '修改密码时间',
    createdUserId: '创建人',
    createdTime: '创建时间',
    modifyiedUserId: '最后更新人',
    modifyiedTime: '最后更新时间',
    datetimeStamp: '时间戳',
    genderCode: '1男 2女 9 未知',
    publicOpenId: 'publicOpenId',
    currentFactoryId: 'currentFactoryId',
    remark: '备注',
  }[field];
}

export function displayReportAbnormalEventDTO(
  field: keyof API.ReportAbnormalEventDTO
) {
  return {
    abnormalRecordId: '异常记录id',
    eventId: '事件id',
    processDispatchId: '工序派工id',
  }[field];
}
/* eslint-disable */
// @ts-ignore
export * from './types';
export * from './displayTypeLabel';

export * from './web';
/* eslint-disable */
// @ts-ignore

export type AddAndonRecordNodeDescUsingPostResponses = {
  200: ApiResult;
};

export type AddDeviceMachine = {
  lineId: number;
  lineName?: string;
  machineCode: string;
  machineName: string;
  manageUserId?: number;
  manageUserName?: string;
  lightSn: string;
  signalId?: number;
  serialNo?: string;
  location?: string;
  imgList?: string[];
  /** 更新才有 */
  deviceMachineId?: number;
};

export type AddDeviceMachineUsingPostResponses = {
  200: ApiResult;
};

export type AndonClose = {
  andonRecordId: number;
  disposeDesc?: string;
  disposeImgUrls?: string[];
};

export type AndonRecordNode = {
  id?: number;
  andonRecordId?: number;
  /** 节点描述 */
  nodeDesc?: string;
  /** 节点备注 */
  nodeRemark?: string;
  /** 1 已上报，2 已接收，3 已处理(关闭)， 4 更换处理人 5 变更内容 6 自定义回复 9 已撤销 */
  nodeType?: string;
  nodeTypeName?: string;
  nodeUserId?: number;
  nodeUserName?: string;
  createdUserId?: number;
  createdTime?: string;
  modifyiedUserId?: number;
  modifyiedTime?: string;
};

export type AndonRecordQuery = {
  queryDeptId?: number;
  /** 与我有关, 处理人或者报告人是我或者接收人是我 */
  myRelatedFlag?: string;
  /** 处理状态 1 查询未处理的 2 查询已处理的 */
  queryDisposeStatus?: string;
  /** 1 60天内 2 今天 3 本月 5 日期范围查询 默认1 */
  queryTimeType?: string;
  factoryId?: number;
  startTime?: string;
  endTime?: string;
  size?: number;
  current?: number;
};

export type AndonRecordVO = {
  /** ID */
  id?: number;
  /** 工厂id */
  factoryId?: number;
  factoryName?: string;
  deptId?: number;
  deptName?: string;
  /** 车间id */
  workshopId?: number;
  workshopName?: string;
  /** 产线d */
  lineId?: number;
  lineName?: string;
  /** 设备ID */
  machineId?: number;
  /** 灯ID */
  signalId?: number;
  /** 日历排班ID */
  calendarDetailId?: number;
  calendarId?: number;
  calendarDate?: string;
  shiftDetailName?: string;
  machineName?: string;
  machineCode?: string;
  /** 事件配置ID */
  configId?: number;
  configName?: string;
  eventName?: string;
  /** 报告人ID */
  reportUserId?: number;
  reportUserName?: string;
  /** 开始时间 */
  reportTime?: string;
  /** 报告备注 */
  reportComments?: string;
  /** 报告日期 */
  reportDate?: string;
  /** 优先级 */
  priority?: string;
  /** 通知人ID列表 */
  notifyUseridStrs?: string;
  /** 接收人 */
  receiveUserId?: number;
  receiveUserName?: string;
  /** 接收时间 */
  receiveTime?: string;
  /** 接收用时 */
  receiveDurationTime?: number;
  disposeDurationTime?: number;
  /** 处理人ID */
  disposeUserId?: number;
  disposeUserName?: string;
  /** 处理方式 */
  disposeDesc?: string;
  /** 处理时间 */
  disposeTime?: string;
  /** 持续时间，单位秒 */
  totalDurationTime?: number;
  /** 来源，1 移动端，2 安灯盒按钮， 3 异常事件 */
  sourceType?: string;
  /** 状态，1 已上报，2 已接收，3 已处理， 9 已撤销 */
  state?: string;
  /** 原因分析 */
  eventAnalysis?: string;
  /** 创建人 */
  createdUserId?: number;
  /** 创建时间 */
  createdTime?: string;
  /** 最后更新人 */
  modifyiedUserId?: number;
  /** 最后更新时间 */
  modifyiedTime?: string;
  /** 时间戳 */
  datetimeStamp?: string;
  /** oee明细ID */
  oeeDetailId?: number;
  workCenterName?: string;
  workCenterCode?: string;
  disposeUserNames?: string;
  disposeUserIds?: string;
  totalDurationTimeSt?: string;
  receiveDurationTimeSt?: string;
  disposeDurationTimeSt?: string;
  /** 表状态，1 已上报，2 已接收，3 已处理， 9 已撤销转换状态 已申请 已响应 已关闭 已撤销 */
  statusText?: string;
  disposeUserList?: PlatformUser[];
  recordNodeList?: AndonRecordNode[];
  showColor?: string;
  workCenterId?: number;
  shiftShowColor?: string;
  shiftStartTime?: string;
  shiftEndTime?: string;
  reportImgList?: string[];
  disposeImgList?: string[];
  reportImgUrls?: string;
  disposeImgUrls?: string;
  shiftName?: string;
  completedUserId?: number;
  completedUserName?: string;
};

export type AndonReq = {
  configId: number;
  configName: string;
  imgList?: string[];
  reportComments?: string;
  /** 处理用户 */
  selectHandlerUserIds: number[];
  workCenterId: number;
  reqUserId?: number;
  /** 来源 */
  sourceType?: string;
  /** 工序派工id */
  processDispatchId?: number;
};

export type AndonReqUsingPostResponses = {
  200: ApiResult;
};

export type ApiResult = {
  /** 状态码 */
  code?: string;
  /** 提示 */
  message?: string;
  /** 数据 */
  data?: Record<string, unknown>;
  /** 是否成功 */
  success?: boolean;
};

export type ApiResultAndonRecordVO = {
  /** 状态码 */
  code?: string;
  /** 提示 */
  message?: string;
  /** <p>安灯_记录</p> */
  data?: AndonRecordVO;
  /** 是否成功 */
  success?: boolean;
};

export type ApiResultMyPageAndonRecordVO = {
  /** 状态码 */
  code?: string;
  /** 提示 */
  message?: string;
  /** 数据 */
  data?: MyPageAndonRecordVO;
  /** 是否成功 */
  success?: boolean;
};

export type ApiResultString = {
  /** 状态码 */
  code?: string;
  /** 提示 */
  message?: string;
  /** 数据 */
  data?: string;
  /** 是否成功 */
  success?: boolean;
};

export type CancelRemarkStatusUsingPostResponses = {
  200: ApiResult;
};

export type ChangeAndonEventTypeUsingPostResponses = {
  200: ApiResult;
};

export type ChangeDisposeAndonUsingPostResponses = {
  200: ApiResult;
};

export type CloseAndonUsingPostResponses = {
  200: ApiResult;
};

export type GetAAndonReqCfgUsingPostResponses = {
  200: ApiResult;
};

export type GetAbnormalEventCfgListUsingPostResponses = {
  200: ApiResult;
};

export type GetAbnormalRecordUsingPostResponses = {
  200: ApiResult;
};

export type GetAllUserUsingPostResponses = {
  200: ApiResult;
};

export type GetAllWorkshopLineUsingPostResponses = {
  200: ApiResult;
};

export type GetAndonRecordInfoUsingPostResponses = {
  200: ApiResultAndonRecordVO;
};

export type GetAndonRecordListUsingPostResponses = {
  200: ApiResultMyPageAndonRecordVO;
};

export type GetCurrentShiftUsingPostResponses = {
  200: ApiResultString;
};

export type GetDeviceListUsingPostBody = string;

export type GetDeviceListUsingPostParams = {
  /** ID */
  id?: number;
  /** 工厂ID */
  factoryId?: number;
  deptId?: number;
  /** 车间ID */
  workshopId?: number;
  /** 产线ID */
  lineId?: number;
  /** 分类ID */
  categoryId?: number;
  /** 灯ID */
  signalId?: number;
  lightSn?: string;
  /** 设备编号 */
  machineCode?: string;
  /** 设备名称 */
  machineName?: string;
  /** 拼音码 */
  pinyin?: string;
  /** 五笔码 */
  wubi?: string;
  /** 医院图片 */
  imgUrlStrs?: string;
  /** 管理员ID */
  manageUserId?: number;
  /** 品牌 */
  trademark?: string;
  /** 型号 */
  model?: string;
  /** 序列号 */
  serialNo?: string;
  /** 供应商 */
  supplier?: string;
  /** 启用日期 */
  activationDate?: string;
  /** 验收日期 */
  checkDate?: string;
  /** 出厂日期 */
  productionDate?: string;
  /** 脉冲间隔 */
  pulseInterval?: number;
  /** 标准利用率 */
  standardUseRate?: string;
  /** 放置地点 */
  location?: string;
  /** 状态,1启用,2 停用 */
  state?: string;
  /** 备注 */
  remark?: string;
  /** 删除标记 */
  deleteFlag?: string;
  /** 创建人 */
  createdUserId?: number;
  /** 创建时间 */
  createdTime?: string;
  /** 最后更新人 */
  modifyiedUserId?: number;
  /** 最后更新时间 */
  modifyiedTime?: string;
  /** 时间戳 */
  datetimeStamp?: string;
  searchKey?: string;
  /** 0 关机，1 运行，2 等待，3 异常 */
  oeeState?: string;
  oeeTime?: string;
  stateRecordId?: number;
  stateStartTime?: string;
};

export type GetDeviceListUsingPostResponses = {
  200: ApiResult;
};

export type GetEsopListUsingPostResponses = {
  200: ApiResult;
};

export type GetUserWorkshopWorkcenterUsingPostParams = {
  selectDeptId?: number;
};

export type GetUserWorkshopWorkcenterUsingPostResponses = {
  200: ApiResult;
};

export type GetWorkCenterUsingPostResponses = {
  200: ApiResult;
};

export type JSONObject = {
  key?: Record<string, unknown>;
};

export type MyPageAndonRecordVO = {
  records?: AndonRecordVO[];
  total?: number;
  size?: number;
  current?: number;
  orders?: OrderItem[];
  optimizeCountSql?: boolean;
  searchCount?: boolean;
  optimizeJoinOfCountSql?: boolean;
  maxLimit?: number;
  countId?: string;
  startTime?: string;
  startTimeStr?: string;
  endTime?: string;
  endTimeStr?: string;
  hasNextPage?: boolean;
};

export type OrderItem = {
  column?: string;
  asc?: boolean;
};

export type PlatformUser = {
  /** 用户ID */
  id?: number;
  /** 团队id */
  teamId?: number;
  /** 工厂id */
  factoryId?: number;
  deptId?: number;
  /** 所属车间id */
  workshopId?: number;
  /** 所属产线d */
  lineId?: number;
  /** 用户姓名 */
  userName?: string;
  /** 邮箱 */
  email?: string;
  /** 职称 */
  jobTitle?: string;
  /** 用户工号 */
  jobNo?: string;
  /** 用户账号 */
  accountNo?: string;
  /** 用户密码 */
  password?: string;
  /** 身份证号 */
  idNumber?: string;
  /** 出生日期 */
  dateOfBirth?: string;
  /** 联系电话 */
  telephone?: string;
  /** 头像url */
  headImageUrl?: string;
  /** 用户类型，1 平台，2 团队，3 工厂 */
  userType?: string;
  /** 管理员标识，1 管理员，0 非管理员 */
  adminFlag?: string;
  /** 状态（1:在用 2:停用） */
  state?: string;
  /** 是否删除(0:否 1:是) */
  deleteFlag?: string;
  /** 修改密码时间 */
  passwordModifyiedTime?: string;
  /** 创建人 */
  createdUserId?: number;
  /** 创建时间 */
  createdTime?: string;
  /** 最后更新人 */
  modifyiedUserId?: number;
  /** 最后更新时间 */
  modifyiedTime?: string;
  /** 时间戳 */
  datetimeStamp?: string;
  /** 1男 2女 9 未知 */
  genderCode?: string;
  publicOpenId?: string;
  currentFactoryId?: number;
  /** 备注 */
  remark?: string;
};

export type ReceiveAndonUsingPostResponses = {
  200: ApiResult;
};

export type RemarkStatusUsingPostResponses = {
  200: ApiResult;
};

export type ReportAbnormalEventDTO = {
  /** 异常记录id */
  abnormalRecordId: number;
  /** 事件id */
  eventId?: number;
  /** 工序派工id */
  processDispatchId?: number;
};

export type ReportAbnormalEventUsingPostResponses = {
  200: ApiResult;
};

export type UpdateDeviceMachineUsingPostResponses = {
  200: ApiResult;
};
/* eslint-disable */
// @ts-ignore
import request from 'axios';

import * as API from './types';

/** addAndonRecordNodeDesc POST /api/web/workcenter-operate/add-andon-record-node-desc */
export function addAndonRecordNodeDescUsingPost({
  body,
  options,
}: {
  body: API.JSONObject;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>(
    '/api/web/workcenter-operate/add-andon-record-node-desc',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      data: body,
      ...(options || {}),
    }
  );
}

/** addDeviceMachine POST /api/web/workcenter-operate/add-device-machine */
export function addDeviceMachineUsingPost({
  body,
  options,
}: {
  body: API.AddDeviceMachine;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>(
    '/api/web/workcenter-operate/add-device-machine',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      data: body,
      ...(options || {}),
    }
  );
}

/** 安灯请求 POST /api/web/workcenter-operate/andon-req */
export function andonReqUsingPost({
  body,
  options,
}: {
  body: API.AndonReq;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>('/api/web/workcenter-operate/andon-req', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    data: body,
    ...(options || {}),
  });
}

/** cancelRemarkStatus POST /api/web/workcenter-operate/cancel-remark-status */
export function cancelRemarkStatusUsingPost({
  body,
  options,
}: {
  body: API.JSONObject;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>(
    '/api/web/workcenter-operate/cancel-remark-status',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      data: body,
      ...(options || {}),
    }
  );
}

/** 改变安灯事件类型 POST /api/web/workcenter-operate/change-andon-event-type */
export function changeAndonEventTypeUsingPost({
  body,
  options,
}: {
  body: API.JSONObject;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>(
    '/api/web/workcenter-operate/change-andon-event-type',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      data: body,
      ...(options || {}),
    }
  );
}

/** 改变安灯处理人 POST /api/web/workcenter-operate/change-dispose-andon */
export function changeDisposeAndonUsingPost({
  body,
  options,
}: {
  body: API.JSONObject;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>(
    '/api/web/workcenter-operate/change-dispose-andon',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      data: body,
      ...(options || {}),
    }
  );
}

/** 关闭安灯 POST /api/web/workcenter-operate/close-andon */
export function closeAndonUsingPost({
  body,
  options,
}: {
  body: API.AndonClose;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>('/api/web/workcenter-operate/close-andon', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    data: body,
    ...(options || {}),
  });
}

/** getAndonReqCfg POST /api/web/workcenter-operate/get-aAndon-req-cfg */
export function getAAndonReqCfgUsingPost({
  body,
  options,
}: {
  body: API.JSONObject;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>(
    '/api/web/workcenter-operate/get-aAndon-req-cfg',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      data: body,
      ...(options || {}),
    }
  );
}

/** 获取异常事件配置 POST /api/web/workcenter-operate/get-abnormal-event-cfg-list */
export function getAbnormalEventCfgListUsingPost({
  body,
  options,
}: {
  body: API.JSONObject;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>(
    '/api/web/workcenter-operate/get-abnormal-event-cfg-list',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      data: body,
      ...(options || {}),
    }
  );
}

/** getAbnormalRecord POST /api/web/workcenter-operate/get-abnormal-record */
export function getAbnormalRecordUsingPost({
  body,
  options,
}: {
  body: API.JSONObject;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>(
    '/api/web/workcenter-operate/get-abnormal-record',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      data: body,
      ...(options || {}),
    }
  );
}

/** getAllUser POST /api/web/workcenter-operate/get-all-user */
export function getAllUserUsingPost({
  options,
}: {
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>('/api/web/workcenter-operate/get-all-user', {
    method: 'POST',
    ...(options || {}),
  });
}

/** getAllWorkshopAndLineList POST /api/web/workcenter-operate/get-all-workshop-line */
export function getAllWorkshopLineUsingPost({
  options,
}: {
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>(
    '/api/web/workcenter-operate/get-all-workshop-line',
    {
      method: 'POST',
      ...(options || {}),
    }
  );
}

/** 获取安灯记录详情 POST /api/web/workcenter-operate/get-andon-record-info */
export function getAndonRecordInfoUsingPost({
  body,
  options,
}: {
  body: API.JSONObject;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResultAndonRecordVO>(
    '/api/web/workcenter-operate/get-andon-record-info',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      data: body,
      ...(options || {}),
    }
  );
}

/** getAndonRecordList POST /api/web/workcenter-operate/get-andon-record-list */
export function getAndonRecordListUsingPost({
  body,
  options,
}: {
  body: API.AndonRecordQuery;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResultMyPageAndonRecordVO>(
    '/api/web/workcenter-operate/get-andon-record-list',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      data: body,
      ...(options || {}),
    }
  );
}

/** getCurrentShift POST /api/web/workcenter-operate/get-current-shift */
export function getCurrentShiftUsingPost({
  body,
  options,
}: {
  body: API.JSONObject;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResultString>(
    '/api/web/workcenter-operate/get-current-shift',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      data: body,
      ...(options || {}),
    }
  );
}

/** getDeviceList POST /api/web/workcenter-operate/get-device-list */
export function getDeviceListUsingPost({
  params,
  body,
  options,
}: {
  // 叠加生成的Param类型 (非body参数openapi默认没有生成对象)
  params: API.GetDeviceListUsingPostParams;
  body: API.GetDeviceListUsingPostBody;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>('/api/web/workcenter-operate/get-device-list', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    params: {
      ...params,
    },
    data: body,
    ...(options || {}),
  });
}

/** getEsopList POST /api/web/workcenter-operate/get-esop-list */
export function getEsopListUsingPost({
  body,
  options,
}: {
  body: API.JSONObject;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>('/api/web/workcenter-operate/get-esop-list', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    data: body,
    ...(options || {}),
  });
}

/** 获取车间产线结构 POST /api/web/workcenter-operate/get-user-workshop-workcenter */
export function getUserWorkshopWorkcenterUsingPost({
  params,
  options,
}: {
  // 叠加生成的Param类型 (非body参数openapi默认没有生成对象)
  params: API.GetUserWorkshopWorkcenterUsingPostParams;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>(
    '/api/web/workcenter-operate/get-user-workshop-workcenter',
    {
      method: 'POST',
      params: {
        ...params,
      },
      ...(options || {}),
    }
  );
}

/** getWorkCenter POST /api/web/workcenter-operate/get-work-center */
export function getWorkCenterUsingPost({
  body,
  options,
}: {
  body: API.JSONObject;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>('/api/web/workcenter-operate/get-work-center', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    data: body,
    ...(options || {}),
  });
}

/** receiveAndon POST /api/web/workcenter-operate/receive-andon */
export function receiveAndonUsingPost({
  body,
  options,
}: {
  body: API.JSONObject;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>('/api/web/workcenter-operate/receive-andon', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    data: body,
    ...(options || {}),
  });
}

/** remarkStatus POST /api/web/workcenter-operate/remark-status */
export function remarkStatusUsingPost({
  body,
  options,
}: {
  body: API.JSONObject;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>('/api/web/workcenter-operate/remark-status', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    data: body,
    ...(options || {}),
  });
}

/** 报告异常事件 POST /api/web/workcenter-operate/report-abnormal-event */
export function reportAbnormalEventUsingPost({
  body,
  options,
}: {
  body: API.ReportAbnormalEventDTO;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>(
    '/api/web/workcenter-operate/report-abnormal-event',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      data: body,
      ...(options || {}),
    }
  );
}

/** updateDeviceMachine POST /api/web/workcenter-operate/update-device-machine */
export function updateDeviceMachineUsingPost({
  body,
  options,
}: {
  body: API.AddDeviceMachine;
  options?: { [key: string]: unknown };
}) {
  return request<API.ApiResult>(
    '/api/web/workcenter-operate/update-device-machine',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      data: body,
      ...(options || {}),
    }
  );
}
